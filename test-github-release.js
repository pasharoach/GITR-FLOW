// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ GitHub —Ä–µ–ª–∏–∑–∞
const https = require('https');

console.log('üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub —Ä–µ–ª–∏–∑–∞ v7.2.0...');
console.log('');

const options = {
    hostname: 'api.github.com',
    port: 443,
    path: '/repos/pasharoach/GITR-FLOW/releases',
    method: 'GET',
    headers: {
        'User-Agent': 'GITR-FLOW-Auto-Update-Test',
        'Accept': 'application/vnd.github.v3+json'
    }
};

const req = https.request(options, (res) => {
    let data = '';

    res.on('data', (chunk) => {
        data += chunk;
    });

    res.on('end', () => {
        try {
            console.log('üì° –û—Ç–≤–µ—Ç –æ—Ç GitHub:', data.substring(0, 200) + '...');
            console.log('');
            
            const releases = JSON.parse(data);
            console.log('üìä –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö:', typeof releases);
            console.log('üìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ–ª–∏–∑–æ–≤:', Array.isArray(releases) ? releases.length : '–Ω–µ –º–∞—Å—Å–∏–≤');
            console.log('');

            const release720 = releases.find(r => r.tag_name === 'v7.2.0');
            
            if (release720) {
                console.log('‚úÖ –†–µ–ª–∏–∑ v7.2.0 –Ω–∞–π–¥–µ–Ω!');
                console.log('üì¶ –í–µ—Ä—Å–∏—è:', release720.tag_name);
                console.log('üìù –ù–∞–∑–≤–∞–Ω–∏–µ:', release720.name);
                console.log('üìÖ –î–∞—Ç–∞:', new Date(release720.published_at).toLocaleString('ru-RU'));
                console.log('üìã –û–ø–∏—Å–∞–Ω–∏–µ:', release720.body ? release720.body.substring(0, 100) + '...' : '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è');
                console.log('');
                console.log('üìÅ –§–∞–π–ª—ã —Ä–µ–ª–∏–∑–∞:');
                release720.assets.forEach(asset => {
                    console.log(`   - ${asset.name} (${(asset.size / 1024 / 1024).toFixed(1)} MB)`);
                });
                console.log('');
                console.log('üéâ GitHub —Ä–µ–ª–∏–∑ –≥–æ—Ç–æ–≤! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.');
            } else {
                console.log('‚ùå –†–µ–ª–∏–∑ v7.2.0 –Ω–µ –Ω–∞–π–¥–µ–Ω');
                console.log('');
                console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–ª–∏–∑—ã:');
                releases.forEach(release => {
                    console.log(`   - ${release.tag_name} (${new Date(release.published_at).toLocaleDateString('ru-RU')})`);
                });
                console.log('');
                console.log('‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
                console.log('   - –†–µ–ª–∏–∑ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω');
                console.log('   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–µ–≥ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å v7.2.0)');
                console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π');
            }
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –æ—Ç–≤–µ—Ç–∞:', error.message);
        }
    });
});

req.on('error', (error) => {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ GitHub:', error.message);
    console.log('');
    console.log('üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
    console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π pasharoach/Notebook —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é');
});

req.end();
